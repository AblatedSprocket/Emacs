* Goals

My primary goal with Emacs is to consolidate the software I use at home. At work, I rely completely on Microsoft's ecosystem and have done what I can to get away from that ecosystem at home. Originally, the intention for my Emacs configuration was to create one environment for all the programming languages I use. As I have familiarized myself with Emacs over the last year and Org mode over the past month or two, I have begun using Emacs for more things. If you're curious about how I'm using emacs, I suggest looking at my =config.org= file. It's broken down by workflow, and each workflow is broken down into the packages that comprise it. My =init.el= file provides the capability to toggle each package on or off based on its =TODO= state. I have two primary reasons for organizing my configuration this way. The first is that, occasionally, when I want to add a new package into my configuration, the package doesn't work as advertised and sometimes it's because of a problem with my setup. Making packages toggle-able makes it easier to debug these issues. The second reason is that I get a strong satisfaction from cleaning out my setup every once in a while. If I want to know what my life would be like without a certain package, being able to toggle my configuration for that package makes this process much easier.

* Installation

This installation documentation is for Emacs 27 on Ubuntu, Debian-based distributions, and other distributions that use apt. There may or may not be some differences in the libraries provided by other package managers. For Emacs to pick up the configuration provided, it should be placed in =~/.config/emacs/=.

The first step is to install the dependencies. This repository comes with a script to install everything the configuration uses. If you are not me, then you probably do not want to do this. I've tabulated my dependencies and what I use them for in my [[file:config.org::*Emacs Dependencies][config]]. I suggest reviewing that before installation. That being said, the first thing to do is install dependencies:

#+BEGIN_SRC shell :padline no
  cd ~/.config/emacs
  sudo dependencies.sh
#+END_SRC

Download the [[http://git.savannah.gnu.org/cgit/emacs.git][source code]] and untar files with =tar -xzvf emacs-27.1.tar.gz=. Navigate to the directory of the unzipped source code and enter the following to get the configuration files ready for the install:

#+BEGIN_SRC shell
  ./autogen.sh
  ./configure --with-json --with-modules --with-rsvg --without-pop
#+END_SRC

Sometimes, =./configure= suggests more packages to install. I don't really know any better so I typically look up the application it wants (I've found deb packages often don't quite match what Emacs is looking for) and install it. Anyway, once that's all done, it's install time:

#+BEGIN_SRC shell
  sudo make && sudo make install
#+END_SRC

On first install, try running =package-refresh-contents= and =package-initialize= within Emacs if you encounter errors. This has fixed things for me in the past.

With everything installed, I suggest moving to [[file:config.org][config.org]] for details on how everything is configured. Unless you want Emacs to run as a daemon on startup. In that case, keep reading!

* Daemon

When installing from source, it appears that the =emacs.service= file does not always get created properly, so starting an Emacs server (i.e. running Emacs as a daemon) by executing =systemctl --user enable emacs= does not work. You can check by running =systemctl status --user emacs=. The command will tell you where the service file is located. I created my own systemd entry in =~/.config/systemd/user/emacs.service= as described [https://www.emacswiki.org/emacs/EmacsAsDaemon][here]. If the service file exists, just make sure it looks like this:

#+BEGIN_EXAMPLE
[Unit]
Description=Emacs texteditor
Documentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/

[Service]
Type=forking
ExecStart=/usr/local/bin/emacs --daemon
ExecStop=/usr/local/bin/emacsclient --eval "(kill-emacs)"
Environment=SSH_AUTH_SOCK=%t/keyring/ssh
Restart=on-failure

[Install]
WantedBy=default.target
#+END_EXAMPLE

To run an Emacs client, either run:

#+BEGIN_SRC shell :padline no
emacsclient -create-frame --alternate-editor=""
#+END_SRC

Or, create a Desktop entry in =~/.local/share/applications/emacsclient.desktop=:

#+BEGIN_EXAMPLE
[Desktop Entry]
Name = Emacs Client
GenericName=Text Editor
Comment=Emacs Editor
MimeType=text/english;text/plain
Exec=emacsclient -create-frame --alternate-editor=""
Icon=emacs
Type=Application
Terminal=false
Categories=Development;TextEditor;Utility;
StartupWMClass=Emacs
#+END_EXAMPLE

* Org as a MIME type

As I use Org more and more, I find myself wishing Pop!_os knew to open Org files with Emacs. It turns out that this is possible! Just copy this to =/usr/share/mime/packages/org.xml=:

#+BEGIN_SRC xml :padline no
  <?xml version="1.0"
      encoding="utf-8"?>
  <mime-info xmlns="http://www.freedesktop.org/standards/shared-mime-info">
    <mime-type type="text/org">
      <comment>Emacs Org-mode File</comment>
      <glob pattern="*.org"/>
      <alias type="text/org"/>
    </mime-type>
  </mime-info>
#+END_SRC

On top of that, Papirus's icon pack has an icon for it if you have Gnome-Tweaks. I added the PPA to my system:

#+BEGIN_SRC shell :padline no
  sudo add-apt-repository ppa:papirus/papirus
  sudo apt update
  sudo apt install papirus-icon-theme
  sudo update-mime-database /usr/share/mime
  xdg-mime default emacsclient.desktop text/org
#+END_SRC

Apparently your mime database can be in different places. For Pop!_os it was in =/usr/share/mime= (I think, may also have been =/usr/lib/mime=, but this seems less likely). If you're not running Emacs as a daemon, then replace =emacsclient.desktop= with =emacs.desktop=. Also, the update command will only work if the XML file has been created.

* Notes
Anything in the =lisp= directory isn't mine. Org-Gantt is currently maintained [[https://gitlab.com/joukeHijlkema/org-gantt/][here]]. I just have some minor changes to make it render more nicely for me. Ejira is currently maintained [[https://github.com/nyyManni/ejira/blob/master/ejira-core.el][here]], waiting for it to get to MELPA.
